lambda->method::reference



- can only replace lambda with single method-call
- four types of method references to
    (1) a constructor: Class::new
    (2) a static method: Class::staticMethod
    (3) an instance method of a particular obj: instance::instanceMethod
    (4) an instance method of an arbitrary obj of a particular type: Class:instanceMethod

EXAMPLE
(1)
Supplier<StringBuilder> supplier = StringBuilder::new;
(2)
List<String> names = Arrays.asList("joe doe", "mary jane");
names.forEach(System.out::println);
(3)
static class CustomComparator<T extends Comparable<T>> {
    public int compare(final T a, final T b) {
        return a.compareTo(b);
    }
}
CustomComparator<Integer> comp = new CustomComparator<>();
List<Integer> ls = Arrays.asList(2, 3, 1);
ls.sort(comp::compare); // ls = [1, 2, 3]
(4)
record Person(String first, String last) {
    void sayName() {
        System.out.printf("%s %s%n", first, last);
    }
}
List<Person> people = List.of(new Person("joe", "doe"), new Person("mary", "jane"));
people.forEach(Person::sayName);
