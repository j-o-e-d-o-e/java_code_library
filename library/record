record

data type

- immutable data class
    - instances allocated on the heap (like objs of classes)
- automatically includes
    - public constructor
    - getters for each field
    - equals() returns true, if two objs have same type and vals
    - toString()
- may be generic, e.g. record Person<T>(T first, T last){}
- static vars and methods may be added
- since Java 14

- SEE ALSO
    - stackoverflow.com/questions/64756584/are-java-records-stack-allocated-like-c-sharp-structs

EXAMPLE
record Person(String first, String last) {
    static String GREET = "Hi there";

    String sayName() {
        return String.format("%s, I am %s %s", GREET, first, last);
    }
}
Person p = new Person("Joe", "Doe");
System.out.println(p.sayName()); // Hi there, I am Joe Doe
