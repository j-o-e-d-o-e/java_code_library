regex



(1) string-methods with built-in regex-support
    - split(String regex, int limit) splits this around matches of regex and returns String[]
        - limit: how many splits (optional)
    - replaceFirst(String regex, String repl) replaces 1st substring that matches regex with repl
    - replaceAll(String regex, String repl) replaces each substring that matches regex with repl
    - matches(String regex) tells whether or not this string matches regex
(2) Pattern/Matcher classes
    - Pattern to define regex and create Matcher obj
        - compile(String regex): static method which returns Pattern obj
        - matcher(String str): instance method which returns Matcher obj
    - Matcher to find matches, e.g.
        - find() returns true if found

- SEE ALSO
    - vogella.com/tutorials/JavaRegularExpressions/article.html

EXAMPLE
(1)
String[] a = "joe doe".split("\\s+");       // a = [joe, doe]
a = Arrays.stream(a).map(s -> s.replaceFirst("e", "ey"))
        .toArray(String[]::new);            // a = [joey, doey]
boolean b = Arrays.stream(a)
        .allMatch(s -> s.matches("\\w.*")); // b = true

(2)
Pattern pattern = Pattern.compile("oe|a", Pattern.CASE_INSENSITIVE);
Matcher matcher = pattern.matcher("joe DOE mary JANE");
while (matcher.find()) {
    System.out.printf("%2d->%2d: %s%n", matcher.start(),
            matcher.end(), matcher.group());  //  1-> 3: oe
                                              // 5-> 7: OE
                                              //  9->10: a
                                              // 14->15: A
