comparator

baeldung.com/java-8-comparator-comparing

- comparison function

EXAMPLE
(1)
List<Integer> ls = List.of(90, 10, 80, 95, 50, 98);
List<Integer> best3 = ls.stream().sorted(Comparator.comparingInt(Integer::intValue).reversed())
        .collect(Collectors.toList()).subList(0, Math.min(ls.size(), 3));
System.out.println(best3); // [98, 95, 90]
(2)
public static void main(String[] args) {
    List<Entry> entries = List.of(
            new Entry(LocalDate.of(2000, 9, 30), "graduation", 500.0),
            new Entry(LocalDate.of(1982, 1, 3), "birth", 100.0),
            new Entry(LocalDate.of(2000, 9, 30), "something", 250.0),
            new Entry(LocalDate.of(2005, 9, 30), "diploma 1", -400.0)
    );
    List<Entry> sorted = entries.stream()
            .sorted(Comparator.comparing(Entry::getLocalDate)
                    .thenComparing(Entry::getChange)).collect(Collectors.toList());
    sorted.forEach(System.out::println);
    // Entry{localDate=1982-01-03, description='birth', change=100.0}
    // Entry{localDate=2000-09-30, description='something', change=250.0}
    // Entry{localDate=2000-09-30, description='graduation', change=500.0}
    // Entry{localDate=2005-09-30, description='diploma 1', change=-400.0}
}

static class Entry {
    LocalDate localDate;
    String description;
    double change;

    Entry(LocalDate localDate, String description, double change) {
        this.localDate = localDate;
        this.description = description;
        this.change = change;
    }

    LocalDate getLocalDate() {
        return localDate;
    }

    double getChange() {
        return change;
    }

    @Override
    public String toString() {
        return "Entry{" + "localDate=" + localDate +
                ", description='" + description + '\'' +
                ", change=" + change + '}';
    }
}
