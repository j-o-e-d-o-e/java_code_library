substitution



- a subtyp can always substitute its supertyp
- a supertype-variable can keep a reference to a subtyp-object
- allows for using overwritten methods/polymorphism

EXAMPLE
import java.util.*;

abstract class Wesen {
    String sprechen() {
        return "Hier bin ich und denke...";
    }
}

class InnerirdischesWesen extends Wesen {
    String sprechen() {
        return "I say: " + super.sprechen();
    }
}

class Au�erirdischesWesen extends Wesen {
    String sprechen() {
        return "She says: " + super.sprechen() + "und werde Euch Menschen alle t�ten!";
    }
}

public class Test {
    public static void main(String[] args) {
        ArrayList<Wesen> all = new ArrayList<Wesen>();
        InnerirdischesWesen joerg = new InnerirdischesWesen();
        Au�erirdischesWesen myFiance = new Au�erirdischesWesen();
        all.add(joerg);
        all.add(myFiance);
        for (Wesen i : all) {
            System.out.println(i.sprechen());
        }
    }
}
//prints:
//I say: Hier bin ich und denke...
//She says: Hier bin ich und denke...und werde Euch Menschen alle t�ten!

#using array lists