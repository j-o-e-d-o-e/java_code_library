lambda

lambda

- <parameter> -> <expression body>
- used primarily to define inline implementation of a functional interface, i.e. an interface with a single method only
- eliminates the need of an anonymous class, e.g. new MathOperation()
- optional type declaration for parameters
- optional parenthesis around single parameter. For multiple parameters, parentheses are required
- optional curly braces if the <expression body> contains only single statement

EXAMPLE
public class MathOps {
    @FunctionalInterface
    interface MathOperation {
        int operation(int a, int b);
    }

    public static void main(String args[]) {
        // with type declaration
        MathOperation addition = (int a, int b) -> a + b;
        // with out type declaration
        MathOperation subtraction = (a, b) -> a - b;
        // with return statement along with curly braces
        MathOperation multiplication = (int a, int b) -> { return a * b; };
        // without return statement and without curly braces
        MathOperation division = (int a, int b) -> a / b;

        System.out.println(addition.operation(10, 5));
        System.out.println(subtraction.operation(10, 5));
        System.out.println(multiplication.operation(10, 5));
        System.out.println(division.operation(10, 5));
    }
}
