lambda

anonymous func

- primarily, used for inline implementation of a functional interface
    - more concisely, of the single abstract method (SAM) within this interface
- (param, param) -> { body }
    - type declaration for params optional
    - parenthesis optional, if only single param without type
    - curly braces optional, if body contains only single statement
- all external vars used inside lambda have to be effectively final
    - workaround: use external array to store var (instead of var itself)

EXAMPLE
@FunctionalInterface
interface MathOperation {
    int op(int a, int b);
}

public static void main(String[] args) {
    MathOperation minus = (a, b) -> a - b;
    MathOperation multiply = (a, b) -> {
        return a * b;
    };
    MathOperation divide = (int a, int b) -> a / b;

    int a = minus.op(10, 5);    // a = 5
    int b = multiply.op(10, 5); // b = 50
    int c = divide.op(10, 5);   // c = 2
}
